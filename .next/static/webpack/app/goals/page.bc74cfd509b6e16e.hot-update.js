"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/goals/page",{

/***/ "(app-pages-browser)/./src/lib/goals.ts":
/*!**************************!*\
  !*** ./src/lib/goals.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addGitHubPushToGoal: function() { return /* binding */ addGitHubPushToGoal; },\n/* harmony export */   addTaskToGoal: function() { return /* binding */ addTaskToGoal; },\n/* harmony export */   createGoal: function() { return /* binding */ createGoal; },\n/* harmony export */   deleteGoal: function() { return /* binding */ deleteGoal; },\n/* harmony export */   getGoalById: function() { return /* binding */ getGoalById; },\n/* harmony export */   getGoalsByStatus: function() { return /* binding */ getGoalsByStatus; },\n/* harmony export */   getUserGoals: function() { return /* binding */ getUserGoals; },\n/* harmony export */   updateGoal: function() { return /* binding */ updateGoal; },\n/* harmony export */   updateTaskInGoal: function() { return /* binding */ updateTaskInGoal; }\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n\n\n// Helper function to check if Firebase is available\nconst isFirebaseAvailable = ()=>{\n    return _firebase__WEBPACK_IMPORTED_MODULE_0__.db !== undefined;\n};\n// Helper function to get user goals subcollection reference\nconst getUserGoalsCollection = (userId)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"goals\", userId, \"userGoals\");\n};\n// Helper function to get user document reference\nconst getUserDocument = (userId)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"goals\", userId);\n};\n// Create a new goal\nconst createGoal = async (goalData)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    const { userId, ...goalWithoutUserId } = goalData;\n    // First, ensure user document exists\n    const userDocRef = getUserDocument(userId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.setDoc)(userDocRef, {\n        userId,\n        createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.Timestamp.now(),\n        updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.Timestamp.now()\n    }, {\n        merge: true\n    });\n    const goalWithTimestamps = {\n        ...goalWithoutUserId,\n        createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.Timestamp.now(),\n        updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.Timestamp.now()\n    };\n    const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.addDoc)(getUserGoalsCollection(userId), goalWithTimestamps);\n    return docRef.id;\n};\n// Get all goals for a specific user\nconst getUserGoals = async (userId)=>{\n    if (!isFirebaseAvailable()) {\n        console.warn(\"Firebase not available, returning empty array\");\n        return [];\n    }\n    try {\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(getUserGoalsCollection(userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"createdAt\", \"desc\"));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(q);\n        return querySnapshot.docs.map((doc)=>{\n            var _doc_data_createdAt, _doc_data_updatedAt, _doc_data_targetDate;\n            return {\n                id: doc.id,\n                userId,\n                ...doc.data(),\n                createdAt: ((_doc_data_createdAt = doc.data().createdAt) === null || _doc_data_createdAt === void 0 ? void 0 : _doc_data_createdAt.toDate()) || new Date(),\n                updatedAt: ((_doc_data_updatedAt = doc.data().updatedAt) === null || _doc_data_updatedAt === void 0 ? void 0 : _doc_data_updatedAt.toDate()) || new Date(),\n                targetDate: ((_doc_data_targetDate = doc.data().targetDate) === null || _doc_data_targetDate === void 0 ? void 0 : _doc_data_targetDate.toDate()) || new Date()\n            };\n        });\n    } catch (error) {\n        console.error(\"Error getting user goals:\", error);\n        return [];\n    }\n};\n// Get a specific goal by ID\nconst getGoalById = async (userId, goalId)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    try {\n        const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"goals\", userId, \"userGoals\", goalId);\n        const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(docRef);\n        if (docSnap.exists()) {\n            var _data_createdAt, _data_updatedAt, _data_targetDate;\n            const data = docSnap.data();\n            return {\n                id: docSnap.id,\n                userId,\n                ...data,\n                createdAt: ((_data_createdAt = data.createdAt) === null || _data_createdAt === void 0 ? void 0 : _data_createdAt.toDate()) || new Date(),\n                updatedAt: ((_data_updatedAt = data.updatedAt) === null || _data_updatedAt === void 0 ? void 0 : _data_updatedAt.toDate()) || new Date(),\n                targetDate: ((_data_targetDate = data.targetDate) === null || _data_targetDate === void 0 ? void 0 : _data_targetDate.toDate()) || new Date()\n            };\n        } else {\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error getting goal:\", error);\n        return null;\n    }\n};\n// Update a goal\nconst updateGoal = async (userId, goalId, updates)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    const { userId: _, ...updatesWithoutUserId } = updates; // Remove userId from updates\n    const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"goals\", userId, \"userGoals\", goalId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.updateDoc)(docRef, {\n        ...updatesWithoutUserId,\n        updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.Timestamp.now()\n    });\n};\n// Delete a goal\nconst deleteGoal = async (userId, goalId)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_0__.db, \"goals\", userId, \"userGoals\", goalId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.deleteDoc)(docRef);\n};\n// Add a task to a goal\nconst addTaskToGoal = async (userId, goalId, task)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    const goal = await getGoalById(userId, goalId);\n    if (!goal) {\n        throw new Error(\"Goal not found\");\n    }\n    const newTask = {\n        ...task,\n        id: \"task_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9))\n    };\n    const updatedTasks = [\n        ...goal.tasks,\n        newTask\n    ];\n    await updateGoal(userId, goalId, {\n        tasks: updatedTasks\n    });\n};\n// Update a task in a goal\nconst updateTaskInGoal = async (userId, goalId, taskId, updates)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    const goal = await getGoalById(userId, goalId);\n    if (!goal) {\n        throw new Error(\"Goal not found\");\n    }\n    const updatedTasks = goal.tasks.map((task)=>task.id === taskId ? {\n            ...task,\n            ...updates\n        } : task);\n    await updateGoal(userId, goalId, {\n        tasks: updatedTasks\n    });\n};\n// Add a GitHub push to a goal\nconst addGitHubPushToGoal = async (userId, goalId, push)=>{\n    if (!isFirebaseAvailable()) {\n        throw new Error(\"Firebase is not available\");\n    }\n    const goal = await getGoalById(userId, goalId);\n    if (!goal) {\n        throw new Error(\"Goal not found\");\n    }\n    const newPush = {\n        ...push,\n        id: \"push_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9))\n    };\n    const updatedPushes = [\n        ...goal.githubPushes,\n        newPush\n    ];\n    await updateGoal(userId, goalId, {\n        githubPushes: updatedPushes\n    });\n};\n// Get goals by status for a specific user\nconst getGoalsByStatus = async (userId, status)=>{\n    if (!isFirebaseAvailable()) {\n        console.warn(\"Firebase not available, returning empty array\");\n        return [];\n    }\n    try {\n        let q;\n        if (status === \"all\") {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(getUserGoalsCollection(userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"createdAt\", \"desc\"));\n        } else {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(getUserGoalsCollection(userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.where)(\"status\", \"==\", status), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"createdAt\", \"desc\"));\n        }\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(q);\n        return querySnapshot.docs.map((doc)=>{\n            var _doc_data_createdAt, _doc_data_updatedAt, _doc_data_targetDate;\n            return {\n                id: doc.id,\n                userId,\n                ...doc.data(),\n                createdAt: ((_doc_data_createdAt = doc.data().createdAt) === null || _doc_data_createdAt === void 0 ? void 0 : _doc_data_createdAt.toDate()) || new Date(),\n                updatedAt: ((_doc_data_updatedAt = doc.data().updatedAt) === null || _doc_data_updatedAt === void 0 ? void 0 : _doc_data_updatedAt.toDate()) || new Date(),\n                targetDate: ((_doc_data_targetDate = doc.data().targetDate) === null || _doc_data_targetDate === void 0 ? void 0 : _doc_data_targetDate.toDate()) || new Date()\n            };\n        });\n    } catch (error) {\n        console.error(\"Error getting goals by status:\", error);\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/goals.ts\n"));

/***/ })

});