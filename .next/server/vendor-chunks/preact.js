/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact";
exports.ids = ["vendor-chunks/preact"];
exports.modules = {

/***/ "(rsc)/./node_modules/preact/dist/preact.js":
/*!********************************************!*\
  !*** ./node_modules/preact/dist/preact.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, t, u, r, i, o, e, f, c, s, p, a, h = {}, v = [], y = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, w = Array.isArray;\nfunction d(n, l) {\n    for(var t in l)n[t] = l[t];\n    return n;\n}\nfunction g(n) {\n    n && n.parentNode && n.parentNode.removeChild(n);\n}\nfunction _(l, t, u) {\n    var r, i, o, e = {};\n    for(o in t)\"key\" == o ? r = t[o] : \"ref\" == o ? i = t[o] : e[o] = t[o];\n    if (arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : u), \"function\" == typeof l && null != l.defaultProps) for(o in l.defaultProps)void 0 === e[o] && (e[o] = l.defaultProps[o]);\n    return x(l, e, r, i, null);\n}\nfunction x(n, u, r, i, o) {\n    var e = {\n        type: n,\n        props: u,\n        key: r,\n        ref: i,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __c: null,\n        constructor: void 0,\n        __v: null == o ? ++t : o,\n        __i: -1,\n        __u: 0\n    };\n    return null == o && null != l.vnode && l.vnode(e), e;\n}\nfunction m(n) {\n    return n.children;\n}\nfunction b(n, l) {\n    this.props = n, this.context = l;\n}\nfunction k(n, l) {\n    if (null == l) return n.__ ? k(n.__, n.__i + 1) : null;\n    for(var t; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) return t.__e;\n    return \"function\" == typeof n.type ? k(n) : null;\n}\nfunction S(n) {\n    var l, t;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) {\n            n.__e = n.__c.base = t.__e;\n            break;\n        }\n        return S(n);\n    }\n}\nfunction M(n) {\n    (!n.__d && (n.__d = !0) && r.push(n) && !$.__r++ || i != l.debounceRendering) && ((i = l.debounceRendering) || o)($);\n}\nfunction $() {\n    for(var n, t, u, i, o, f, c, s = 1; r.length;)r.length > s && r.sort(e), n = r.shift(), s = r.length, n.__d && (u = void 0, o = (i = (t = n).__v).__e, f = [], c = [], t.__P && ((u = d({}, i)).__v = i.__v + 1, l.vnode && l.vnode(u), j(t.__P, u, i, t.__n, t.__P.namespaceURI, 32 & i.__u ? [\n        o\n    ] : null, f, null == o ? k(i) : o, !!(32 & i.__u), c), u.__v = i.__v, u.__.__k[u.__i] = u, O(f, u, c), u.__e != o && S(u)));\n    $.__r = 0;\n}\nfunction C(n, l, t, u, r, i, o, e, f, c, s) {\n    var p, a, y, w, d, g, _ = u && u.__k || v, x = l.length;\n    for(f = I(t, l, _, f, x), p = 0; p < x; p++)null != (y = t.__k[p]) && (a = -1 == y.__i ? h : _[y.__i] || h, y.__i = p, g = j(n, y, a, r, i, o, e, f, c, s), w = y.__e, y.ref && a.ref != y.ref && (a.ref && V(a.ref, null, y), s.push(y.ref, y.__c || w, y)), null == d && null != w && (d = w), 4 & y.__u || a.__k === y.__k ? f = P(y, f, n) : \"function\" == typeof y.type && void 0 !== g ? f = g : w && (f = w.nextSibling), y.__u &= -7);\n    return t.__e = d, f;\n}\nfunction I(n, l, t, u, r) {\n    var i, o, e, f, c, s = t.length, p = s, a = 0;\n    for(n.__k = new Array(r), i = 0; i < r; i++)null != (o = l[i]) && \"boolean\" != typeof o && \"function\" != typeof o ? (f = i + a, (o = n.__k[i] = \"string\" == typeof o || \"number\" == typeof o || \"bigint\" == typeof o || o.constructor == String ? x(null, o, null, null, null) : w(o) ? x(m, {\n        children: o\n    }, null, null, null) : null == o.constructor && o.__b > 0 ? x(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v) : o).__ = n, o.__b = n.__b + 1, e = null, -1 != (c = o.__i = A(o, t, f, p)) && (p--, (e = t[c]) && (e.__u |= 2)), null == e || null == e.__v ? (-1 == c && (r > s ? a-- : r < s && a++), \"function\" != typeof o.type && (o.__u |= 4)) : c != f && (c == f - 1 ? a-- : c == f + 1 ? a++ : (c > f ? a-- : a++, o.__u |= 4))) : n.__k[i] = null;\n    if (p) for(i = 0; i < s; i++)null != (e = t[i]) && 0 == (2 & e.__u) && (e.__e == u && (u = k(e)), q(e, e));\n    return u;\n}\nfunction P(n, l, t) {\n    var u, r;\n    if (\"function\" == typeof n.type) {\n        for(u = n.__k, r = 0; u && r < u.length; r++)u[r] && (u[r].__ = n, l = P(u[r], l, t));\n        return l;\n    }\n    n.__e != l && (l && n.type && !t.contains(l) && (l = k(n)), t.insertBefore(n.__e, l || null), l = n.__e);\n    do {\n        l = l && l.nextSibling;\n    }while (null != l && 8 == l.nodeType);\n    return l;\n}\nfunction A(n, l, t, u) {\n    var r, i, o, e = n.key, f = n.type, c = l[t], s = null != c && 0 == (2 & c.__u);\n    if (null === c && null == n.key || s && e == c.key && f == c.type) return t;\n    if (u > (s ? 1 : 0)) {\n        for(r = t - 1, i = t + 1; r >= 0 || i < l.length;)if (null != (c = l[o = r >= 0 ? r-- : i++]) && 0 == (2 & c.__u) && e == c.key && f == c.type) return o;\n    }\n    return -1;\n}\nfunction H(n, l, t) {\n    \"-\" == l[0] ? n.setProperty(l, null == t ? \"\" : t) : n[l] = null == t ? \"\" : \"number\" != typeof t || y.test(l) ? t : t + \"px\";\n}\nfunction L(n, l, t, u, r) {\n    var i, o;\n    n: if (\"style\" == l) if (\"string\" == typeof t) n.style.cssText = t;\n    else {\n        if (\"string\" == typeof u && (n.style.cssText = u = \"\"), u) for(l in u)t && l in t || H(n.style, l, \"\");\n        if (t) for(l in t)u && t[l] == u[l] || H(n.style, l, t[l]);\n    }\n    else if (\"o\" == l[0] && \"n\" == l[1]) i = l != (l = l.replace(f, \"$1\")), o = l.toLowerCase(), l = o in n || \"onFocusOut\" == l || \"onFocusIn\" == l ? o.slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + i] = t, t ? u ? t.t = u.t : (t.t = c, n.addEventListener(l, i ? p : s, i)) : n.removeEventListener(l, i ? p : s, i);\n    else {\n        if (\"http://www.w3.org/2000/svg\" == r) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" != l && \"height\" != l && \"href\" != l && \"list\" != l && \"form\" != l && \"tabIndex\" != l && \"download\" != l && \"rowSpan\" != l && \"colSpan\" != l && \"role\" != l && \"popover\" != l && l in n) try {\n            n[l] = null == t ? \"\" : t;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof t || (null == t || !1 === t && \"-\" != l[4] ? n.removeAttribute(l) : n.setAttribute(l, \"popover\" == l && 1 == t ? \"\" : t));\n    }\n}\nfunction T(n) {\n    return function(t) {\n        if (this.l) {\n            var u = this.l[t.type + n];\n            if (null == t.u) t.u = c++;\n            else if (t.u < u.t) return;\n            return u(l.event ? l.event(t) : t);\n        }\n    };\n}\nfunction j(n, t, u, r, i, o, e, f, c, s) {\n    var p, a, h, v, y, _, x, k, S, M, $, I, P, A, H, L, T, j = t.type;\n    if (null != t.constructor) return null;\n    128 & u.__u && (c = !!(32 & u.__u), o = [\n        f = t.__e = u.__e\n    ]), (p = l.__b) && p(t);\n    n: if (\"function\" == typeof j) try {\n        if (k = t.props, S = \"prototype\" in j && j.prototype.render, M = (p = j.contextType) && r[p.__c], $ = p ? M ? M.props.value : p.__ : r, u.__c ? x = (a = t.__c = u.__c).__ = a.__E : (S ? t.__c = a = new j(k, $) : (t.__c = a = new b(k, $), a.constructor = j, a.render = B), M && M.sub(a), a.props = k, a.state || (a.state = {}), a.context = $, a.__n = r, h = a.__d = !0, a.__h = [], a._sb = []), S && null == a.__s && (a.__s = a.state), S && null != j.getDerivedStateFromProps && (a.__s == a.state && (a.__s = d({}, a.__s)), d(a.__s, j.getDerivedStateFromProps(k, a.__s))), v = a.props, y = a.state, a.__v = t, h) S && null == j.getDerivedStateFromProps && null != a.componentWillMount && a.componentWillMount(), S && null != a.componentDidMount && a.__h.push(a.componentDidMount);\n        else {\n            if (S && null == j.getDerivedStateFromProps && k !== v && null != a.componentWillReceiveProps && a.componentWillReceiveProps(k, $), !a.__e && null != a.shouldComponentUpdate && !1 === a.shouldComponentUpdate(k, a.__s, $) || t.__v == u.__v) {\n                for(t.__v != u.__v && (a.props = k, a.state = a.__s, a.__d = !1), t.__e = u.__e, t.__k = u.__k, t.__k.some(function(n) {\n                    n && (n.__ = t);\n                }), I = 0; I < a._sb.length; I++)a.__h.push(a._sb[I]);\n                a._sb = [], a.__h.length && e.push(a);\n                break n;\n            }\n            null != a.componentWillUpdate && a.componentWillUpdate(k, a.__s, $), S && null != a.componentDidUpdate && a.__h.push(function() {\n                a.componentDidUpdate(v, y, _);\n            });\n        }\n        if (a.context = $, a.props = k, a.__P = n, a.__e = !1, P = l.__r, A = 0, S) {\n            for(a.state = a.__s, a.__d = !1, P && P(t), p = a.render(a.props, a.state, a.context), H = 0; H < a._sb.length; H++)a.__h.push(a._sb[H]);\n            a._sb = [];\n        } else do {\n            a.__d = !1, P && P(t), p = a.render(a.props, a.state, a.context), a.state = a.__s;\n        }while (a.__d && ++A < 25);\n        a.state = a.__s, null != a.getChildContext && (r = d(d({}, r), a.getChildContext())), S && !h && null != a.getSnapshotBeforeUpdate && (_ = a.getSnapshotBeforeUpdate(v, y)), L = p, null != p && p.type === m && null == p.key && (L = z(p.props.children)), f = C(n, w(L) ? L : [\n            L\n        ], t, u, r, i, o, e, f, c, s), a.base = t.__e, t.__u &= -161, a.__h.length && e.push(a), x && (a.__E = a.__ = null);\n    } catch (n) {\n        if (t.__v = null, c || null != o) if (n.then) {\n            for(t.__u |= c ? 160 : 128; f && 8 == f.nodeType && f.nextSibling;)f = f.nextSibling;\n            o[o.indexOf(f)] = null, t.__e = f;\n        } else {\n            for(T = o.length; T--;)g(o[T]);\n            F(t);\n        }\n        else t.__e = u.__e, t.__k = u.__k, n.then || F(t);\n        l.__e(n, t, u);\n    }\n    else null == o && t.__v == u.__v ? (t.__k = u.__k, t.__e = u.__e) : f = t.__e = N(u.__e, t, u, r, i, o, e, c, s);\n    return (p = l.diffed) && p(t), 128 & t.__u ? void 0 : f;\n}\nfunction F(n) {\n    n && n.__c && (n.__c.__e = !0), n && n.__k && n.__k.forEach(F);\n}\nfunction O(n, t, u) {\n    for(var r = 0; r < u.length; r++)V(u[r], u[++r], u[++r]);\n    l.__c && l.__c(t, n), n.some(function(t) {\n        try {\n            n = t.__h, t.__h = [], n.some(function(n) {\n                n.call(t);\n            });\n        } catch (n) {\n            l.__e(n, t.__v);\n        }\n    });\n}\nfunction z(n) {\n    return \"object\" != typeof n || null == n || n.__b && n.__b > 0 ? n : w(n) ? n.map(z) : d({}, n);\n}\nfunction N(t, u, r, i, o, e, f, c, s) {\n    var p, a, v, y, d, _, x, m = r.props, b = u.props, S = u.type;\n    if (\"svg\" == S ? o = \"http://www.w3.org/2000/svg\" : \"math\" == S ? o = \"http://www.w3.org/1998/Math/MathML\" : o || (o = \"http://www.w3.org/1999/xhtml\"), null != e) {\n        for(p = 0; p < e.length; p++)if ((d = e[p]) && \"setAttribute\" in d == !!S && (S ? d.localName == S : 3 == d.nodeType)) {\n            t = d, e[p] = null;\n            break;\n        }\n    }\n    if (null == t) {\n        if (null == S) return document.createTextNode(b);\n        t = document.createElementNS(o, S, b.is && b), c && (l.__m && l.__m(u, e), c = !1), e = null;\n    }\n    if (null == S) m === b || c && t.data == b || (t.data = b);\n    else {\n        if (e = e && n.call(t.childNodes), m = r.props || h, !c && null != e) for(m = {}, p = 0; p < t.attributes.length; p++)m[(d = t.attributes[p]).name] = d.value;\n        for(p in m)if (d = m[p], \"children\" == p) ;\n        else if (\"dangerouslySetInnerHTML\" == p) v = d;\n        else if (!(p in b)) {\n            if (\"value\" == p && \"defaultValue\" in b || \"checked\" == p && \"defaultChecked\" in b) continue;\n            L(t, p, null, d, o);\n        }\n        for(p in b)d = b[p], \"children\" == p ? y = d : \"dangerouslySetInnerHTML\" == p ? a = d : \"value\" == p ? _ = d : \"checked\" == p ? x = d : c && \"function\" != typeof d || m[p] === d || L(t, p, d, m[p], o);\n        if (a) c || v && (a.__html == v.__html || a.__html == t.innerHTML) || (t.innerHTML = a.__html), u.__k = [];\n        else if (v && (t.innerHTML = \"\"), C(\"template\" == u.type ? t.content : t, w(y) ? y : [\n            y\n        ], u, r, i, \"foreignObject\" == S ? \"http://www.w3.org/1999/xhtml\" : o, e, f, e ? e[0] : r.__k && k(r, 0), c, s), null != e) for(p = e.length; p--;)g(e[p]);\n        c || (p = \"value\", \"progress\" == S && null == _ ? t.removeAttribute(\"value\") : null != _ && (_ !== t[p] || \"progress\" == S && !_ || \"option\" == S && _ != m[p]) && L(t, p, _, m[p], o), p = \"checked\", null != x && x != t[p] && L(t, p, x, m[p], o));\n    }\n    return t;\n}\nfunction V(n, t, u) {\n    try {\n        if (\"function\" == typeof n) {\n            var r = \"function\" == typeof n.__u;\n            r && n.__u(), r && null == t || (n.__u = n(t));\n        } else n.current = t;\n    } catch (n) {\n        l.__e(n, u);\n    }\n}\nfunction q(n, t, u) {\n    var r, i;\n    if (l.unmount && l.unmount(n), (r = n.ref) && (r.current && r.current != n.__e || V(r, null, t)), null != (r = n.__c)) {\n        if (r.componentWillUnmount) try {\n            r.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, t);\n        }\n        r.base = r.__P = null;\n    }\n    if (r = n.__k) for(i = 0; i < r.length; i++)r[i] && q(r[i], t, u || \"function\" != typeof n.type);\n    u || g(n.__e), n.__c = n.__ = n.__e = void 0;\n}\nfunction B(n, l, t) {\n    return this.constructor(n, t);\n}\nfunction D(t, u, r) {\n    var i, o, e, f;\n    u == document && (u = document.documentElement), l.__ && l.__(t, u), o = (i = \"function\" == typeof r) ? null : r && r.__k || u.__k, e = [], f = [], j(u, t = (!i && r || u).__k = _(m, null, [\n        t\n    ]), o || h, h, u.namespaceURI, !i && r ? [\n        r\n    ] : o ? null : u.firstChild ? n.call(u.childNodes) : null, e, !i && r ? r : o ? o.__e : u.firstChild, i, f), O(e, t, f);\n}\nn = v.slice, l = {\n    __e: function(n, l, t, u) {\n        for(var r, i, o; l = l.__;)if ((r = l.__c) && !r.__) try {\n            if ((i = r.constructor) && null != i.getDerivedStateFromError && (r.setState(i.getDerivedStateFromError(n)), o = r.__d), null != r.componentDidCatch && (r.componentDidCatch(n, u || {}), o = r.__d), o) return r.__E = r;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, t = 0, u = function(n) {\n    return null != n && null == n.constructor;\n}, b.prototype.setState = function(n, l) {\n    var t;\n    t = null != this.__s && this.__s != this.state ? this.__s : this.__s = d({}, this.state), \"function\" == typeof n && (n = n(d({}, t), this.props)), n && d(t, n), null != n && this.__v && (l && this._sb.push(l), M(this));\n}, b.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), M(this));\n}, b.prototype.render = m, r = [], o = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, e = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, $.__r = 0, f = /(PointerCapture)$|Capture$/i, c = 0, s = T(!1), p = T(!0), a = 0, exports.Component = b, exports.Fragment = m, exports.cloneElement = function(l, t, u) {\n    var r, i, o, e, f = d({}, l.props);\n    for(o in l.type && l.type.defaultProps && (e = l.type.defaultProps), t)\"key\" == o ? r = t[o] : \"ref\" == o ? i = t[o] : f[o] = void 0 === t[o] && null != e ? e[o] : t[o];\n    return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : u), x(l.type, f, r || l.key, i || l.ref, null);\n}, exports.createContext = function(n) {\n    function l(n) {\n        var t, u;\n        return this.getChildContext || (t = new Set, (u = {})[l.__c] = this, this.getChildContext = function() {\n            return u;\n        }, this.componentWillUnmount = function() {\n            t = null;\n        }, this.shouldComponentUpdate = function(n) {\n            this.props.value != n.value && t.forEach(function(n) {\n                n.__e = !0, M(n);\n            });\n        }, this.sub = function(n) {\n            t.add(n);\n            var l = n.componentWillUnmount;\n            n.componentWillUnmount = function() {\n                t && t.delete(n), l && l.call(n);\n            };\n        }), n.children;\n    }\n    return l.__c = \"__cC\" + a++, l.__ = n, l.Provider = l.__l = (l.Consumer = function(n, l) {\n        return n.children(l);\n    }).contextType = l, l;\n}, exports.createElement = _, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = _, exports.hydrate = function n(l, t) {\n    D(l, t, n);\n}, exports.isValidElement = u, exports.options = l, exports.render = D, exports.toChildArray = function n(l, t) {\n    return t = t || [], null == l || \"boolean\" == typeof l || (w(l) ? l.some(function(l) {\n        n(l, t);\n    }) : t.push(l)), t;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/preact/dist/preact.js\n");

/***/ })

};
;